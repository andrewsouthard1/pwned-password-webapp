package com.purenix.gooby;

import com.purenix.gooby.User;
import com.purenix.gooby.UserRepository;

import org.json.JSONObject;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller    // This means that this class is a Controller
@RequestMapping(path="/pwned") // This means URL's start with /pwned (after Application path)
public class MainController {
	@Autowired // This means to get the bean called userRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
	private UserRepository userRepository;

	@GetMapping(path="/add") // Map ONLY GET Requests
	public @ResponseBody String addNewUser (@RequestParam String name
			, @RequestParam String email, @RequestParam String password) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		User n = new User();
		n.setName(name);
		n.setEmail(email);
		n.setPassword(password);

		Pwned myPass = new Pwned(password);

		// Need to fix this. Redundant to pass in the password again but needed for thymeleaf.
		if (myPass.isPwned(password)) {
			return String.format("{'Status':'FAIL', 'PwnedNum':'%s', 'Message':'the password was found %s times'}",myPass.getPwnedNum(),myPass.getPwnedNum());
		}
		userRepository.save(n);
		return String.format("{'Status':'OK', 'PwnedNum':'%s'}",myPass.getPwnedNum());
	}

	@GetMapping(path="/all")
	public @ResponseBody Iterable<User> getAllUsers() {
		// This returns a JSON or XML with the users
		return userRepository.findAll();
	}
}
